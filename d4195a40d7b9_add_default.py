"""add default

Revision ID: d4195a40d7b9
Revises: ac6529e10c6e
Create Date: 2025-08-11 18:35:03.784848

"""
from datetime import datetime, UTC
from typing import Sequence, Union, Mapping

from alembic import op
import sqlalchemy as sa
from sqlalchemy import func, DateTime, MetaData, delete
from sqlalchemy.orm import Mapped, mapped_column, DeclarativeBase, Session

# revision identifiers, used by Alembic.
revision: str = 'd4195a40d7b9'
down_revision: Union[str, None] = 'e59f241eb36d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

convention: Mapping[str, str] = {
    "ix": "ix__%(column_0_label)s",
    "uq": "uq__%(table_name)s__%(column_0_name)s",
    "ck": "ck__%(table_name)s__%(constraint_name)s",
    "fk": "%(table_name)s_%(column_0_name)s_fkey",
    "pk": "pk__%(table_name)s",
}
meta = MetaData(naming_convention=convention)


class Base(DeclarativeBase):
    metadata = meta


class TimestampMixin:
    created_at: Mapped[datetime] = mapped_column(
        DateTime(timezone=True), server_default=func.now()
    )
    updated_at: Mapped[datetime] = mapped_column(
        DateTime(timezone=True),
        default=lambda: datetime.now(UTC),
        onupdate=func.now(),
        server_default=func.now(),
    )


class SettingsORM(Base, TimestampMixin):
    __tablename__ = "settings"

    id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True)
    key: Mapped[str] = mapped_column(unique=True, nullable=False)
    value: Mapped[str] = mapped_column(nullable=False)
def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    session = Session(bind=op.get_bind())
    settings = SettingsORM(
        key="hide_integration", value="false"
    )
    session.add(settings)
    session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    session=Session(bind=op.get_bind())
    stmt = delete(SettingsORM).where(SettingsORM.key == "hide_integration")
    session.execute(stmt)
    session.commit()
    pass
    # ### end Alembic commands ###
